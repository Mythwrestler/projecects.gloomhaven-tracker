---
kind: pipeline
type: kubernetes
name: "Runtime Image Build Validation"

trigger:
  branch:
    exclude:
      - master
      - dev

  event:
    - push
    - pr

steps:

  - name: build-only-service
    image: plugins/docker
    settings:
      dry_run: true
      repo: harbor.casperinc.net/library/ght/ght-service
      registry: harbor.casperinc.net
      username:
        from_secret: registry-username
      password:
        from_secret: registry-password
      context: ./ght-service/
      dockerfile: ./ght-service/Dockerfile
      build_args:
        - REGISTRY=harbor.casperinc.net/microsoft/
      
  - name: build-only-client
    image: plugins/docker
    settings:
      dry_run: true
      repo: harbor.casperinc.net/library/ght/ght-client
      registry: harbor.casperinc.net
      username:
        from_secret: registry-username
      password:
        from_secret: registry-password
      context: ./ght-client/
      dockerfile: ./ght-client/Dockerfile
      build_args:
        - REGISTRY=harbor.casperinc.net/docker-hub/library/
---
kind: pipeline
type: kubernetes
name: "EF Migration And Seed Data Validation"

trigger:
  branch:
    exclude:
      - master
      - dev

  event:
    - push
    - pr

steps:
  - name: "EF Migration: Prep For Testing"
    image: harbor.casperinc.net/docker-hub/library/bash
    commands:
      - echo -n "$$KUBE_CONFIG" | base64 -d > ./kube-config
      - sed -i "s/__DB_USER__/$$DB_USER/" ./ght-service/Database/Testing/TestingDB.yaml
      - sed -i "s/__DB_DATABASE__/$$DB_DATABASE/" ./ght-service/Database/Testing/TestingDB.yaml
      - sed -i "s/__COMMITSHA__/${DRONE_COMMIT_SHA:0:8}/" ./ght-service/Database/Testing/TestingDB.yaml
    environment:
      KUBE_CONFIG:
        from_secret: k8s-config-base64
      DB_DATABASE:
        from_secret: creds-nprd-db-database
      DB_USER:
        from_secret: creds-nprd-db-user

  - name: "EF Migration: Standup Testing DB"
    image: harbor.casperinc.net/docker-hub/bitnami/kubectl:1.24.3
    commands:
      - cp ./kube-config /.kube/config
      - kubectl apply -f ./ght-service/Database/Testing/TestingDB.yaml --namespace infra-builds
      - kubectl wait deployment ght-testingdb-${DRONE_COMMIT_SHA:0:8} --namespace infra-builds --for condition=Available=True --timeout=90s

  - name: "EF Migration: Test Migration"
    image: harbor.casperinc.net/microsoft/dotnet/sdk:6.0
    environment:
      DB_SERVER: ght-testingdb-${DRONE_COMMIT_SHA:0:8}.infra-builds.svc.cluster.local
      DB_PORT: 5432
      DB_DATABASE:
        from_secret: creds-nprd-db-database
      DB_USER:
        from_secret: creds-nprd-db-user
      DB_PASSWORD: pguser
    commands:
      - cd /drone/src/ght-service
      - export PATH="$PATH:/root/.dotnet/tools"
      - dotnet tool install --global dotnet-ef --version 6.0.3
      - dotnet restore
      - dotnet ef database update --project ./Database/ght-database.csproj --startup-project ./Service

  - name: "EF Migration: Test Data Seed"
    image: harbor.casperinc.net/library/postgresql/client:14
    environment:
      DB_SERVER: ght-testingdb-${DRONE_COMMIT_SHA:0:8}.infra-builds.svc.cluster.local
      DB_PORT: 5432
      DB_DATABASE:
        from_secret: creds-nprd-db-database
      DB_USER:
        from_secret: creds-nprd-db-user
      DB_PASSWORD: pguser
    commands:
      - echo -n "$$DB_SERVER:$$DB_PORT:$$DB_DATABASE:$$DB_USER:$$DB_PASSWORD" >> ~/.pgpass
      - chmod 0600 ~/.pgpass
      - psql --host=$${DB_SERVER} --username=$${DB_USER} --no-password --echo-errors --file=/drone/src/ght-service/Service/Resources/20.DML.ClearDatabase.sql $${DB_DATABASE}
      - psql --host=$${DB_SERVER} --username=$${DB_USER} --no-password --echo-errors --file=/drone/src/ght-service/Service/Resources/30.DML.AddContent.JawsOfTheLion.sql $${DB_DATABASE}
      - psql --host=$${DB_SERVER} --username=$${DB_USER} --no-password --echo-errors --file=/drone/src/ght-service/Service/Resources/40.DML.AddTestData.sql $${DB_DATABASE}

  - name: "EF Migration: Teardown Testing DB"
    when:
      status:
      - success
      - failure
    image: harbor.casperinc.net/docker-hub/bitnami/kubectl:1.24.3
    commands:
      - cp /drone/src/kube-config /.kube/config
      - kubectl delete -f ./ght-service/Database/Testing/TestingDB.yaml --namespace infra-builds
---
kind: pipeline
type: kubernetes
name: "NPRD: Build, Push, & Deploy"

trigger:
  branch:
    include:
      - dev

  event:
    - push
    - merge

steps:


  - name: send-tags-to-tags-file
    image: harbor.casperinc.net/docker-hub/library/bash
    commands:
      - echo -n "${DRONE_BRANCH//\//-}-${DRONE_COMMIT_SHA:0:8}, ${DRONE_BRANCH//\//-}-latest, " > .tags
      - cat /drone/src/version >> .tags

  - name: "EF Migration: Prep For Testing"
    image: harbor.casperinc.net/docker-hub/library/bash
    commands:
      - echo -n "$$KUBE_CONFIG" | base64 -d > ./kube-config
      - sed -i "s/__DB_USER__/$$DB_USER/" ./ght-service/Database/Testing/TestingDB.yaml
      - sed -i "s/__DB_DATABASE__/$$DB_DATABASE/" ./ght-service/Database/Testing/TestingDB.yaml
      - sed -i "s/__COMMITSHA__/${DRONE_COMMIT_SHA:0:8}/" ./ght-service/Database/Testing/TestingDB.yaml
    environment:
      KUBE_CONFIG:
        from_secret: k8s-config-base64
      DB_DATABASE:
        from_secret: creds-nprd-db-database
      DB_USER:
        from_secret: creds-nprd-db-user

  - name: "Ef Migration: Standup Testing DB"
    image: harbor.casperinc.net/docker-hub/bitnami/kubectl:1.24.3
    commands:
      - cp ./kube-config /.kube/config
      - kubectl apply -f ./ght-service/Database/Testing/TestingDB.yaml --namespace infra-builds
      - kubectl wait deployment ght-testingdb-${DRONE_COMMIT_SHA:0:8} --namespace infra-builds --for condition=Available=True --timeout=90s

  - name: "EF Migration: Test Migration"
    image: harbor.casperinc.net/microsoft/dotnet/sdk:6.0
    environment:
      DB_SERVER: ght-testingdb-${DRONE_COMMIT_SHA:0:8}.infra-builds.svc.cluster.local
      DB_PORT: 5432
      DB_DATABASE:
        from_secret: creds-nprd-db-database
      DB_USER:
        from_secret: creds-nprd-db-user
      DB_PASSWORD: pguser
    commands:
      - cd /drone/src/ght-service
      - export PATH="$PATH:/root/.dotnet/tools"
      - dotnet tool install --global dotnet-ef --version 6.0.3
      - dotnet restore
      - dotnet ef database update --project ./Database/ght-database.csproj --startup-project ./Service

  - name: "EF Migration: Teardown Testing DB"
    when:
      status:
      - success
      - failure
    image: harbor.casperinc.net/docker-hub/bitnami/kubectl:1.24.3
    commands:
      - cp /drone/src/kube-config /.kube/config
      - kubectl delete -f ./ght-service/Database/Testing/TestingDB.yaml --namespace infra-builds

  - name: "Service: Build and Push Image"
    image: plugins/docker
    settings:
      dry_run: false
      repo: harbor.casperinc.net/library/ght/ght-service
      registry: harbor.casperinc.net
      username:
        from_secret: registry-username
      password:
        from_secret: registry-password
      context: ./ght-service/
      dockerfile: ./ght-service/Dockerfile
      build_args:
        - REGISTRY=harbor.casperinc.net/microsoft/

  - name: "Client: Build and Push Image"
    image: plugins/docker
    settings:
      dry_run: false
      repo: harbor.casperinc.net/library/ght/ght-client
      registry: harbor.casperinc.net
      username:
        from_secret: registry-username
      password:
        from_secret: registry-password
      context: ./ght-client/
      dockerfile: ./ght-client/Dockerfile
      build_args:
        - REGISTRY=harbor.casperinc.net/docker-hub/library/
        - BUILD_ENV=nprd

  - name: "EF: Update NPRD Database"
    image: harbor.casperinc.net/microsoft/dotnet/sdk:6.0
    environment:
      DB_SERVER:
        from_secret: creds-nprd-db-server
      DB_PORT:
        from_secret: creds-nprd-db-port
      DB_DATABASE:
        from_secret: creds-nprd-db-database
      DB_USER:
        from_secret: creds-nprd-db-user
      DB_PASSWORD:
        from_secret: creds-nprd-db-password
    commands:
      - cd /drone/src/ght-service
      - export PATH="$PATH:/root/.dotnet/tools"
      - dotnet tool install --global dotnet-ef --version 6.0.3
      - dotnet restore
      - dotnet ef database update --project ./Database/ght-database.csproj --startup-project ./Service

  - name: "Generate Schema Scritps Post Migration"
    image: harbor.casperinc.net/library/postgresql/client:14
    environment:
      DB_SERVER:
        from_secret: creds-nprd-db-server
      DB_PORT:
        from_secret: creds-nprd-db-port
      DB_DATABASE:
        from_secret: creds-nprd-db-database
      DB_USER:
        from_secret: creds-nprd-db-user
      DB_PASSWORD:
        from_secret: creds-nprd-db-password
    commands:
      - echo -n "$$DB_SERVER:$$DB_PORT:$$DB_DATABASE:$$DB_USER:$$DB_PASSWORD" >> ~/.pgpass
      - chmod 0600 ~/.pgpass
      - pg_dump --host=$${DB_SERVER} --username=$${DB_USER} --no-password --file=/drone/src/ght-service/Service/Resources/10.DDL.${DRONE_BRANCH//\//-}-${DRONE_COMMIT_SHA:0:8}.sql --format=p --schema-only $${DB_DATABASE}
      - pg_dump --host=$${DB_SERVER} --username=$${DB_USER} --no-password --file=/drone/src/ght-service/Service/Resources/15.DML.${DRONE_BRANCH//\//-}-${DRONE_COMMIT_SHA:0:8}.sql --column-inserts --data-only --table="public.\"__EFMigrationsHistory\"" $${DB_DATABASE}

  - name: "Create Test DB Image w/ Scripts"
    image: plugins/docker
    settings:
      dry_run: false
      repo: harbor.casperinc.net/library/ght/testingdb
      registry: harbor.casperinc.net
      username:
        from_secret: registry-username
      password:
        from_secret: registry-password
      context: ./ght-service/
      dockerfile: ./ght-service/Database/Testing/TestingDB.Dockerfile
      build_args:
        - REGISTRY=harbor.casperinc.net/docker-hub/library/

  - name: "Replace Placeholders in NPRD Helmchart"
    image: harbor.casperinc.net/docker-hub/library/bash
    commands:
      - export DEPLOY_TAG="${DRONE_BRANCH//\//-}-${DRONE_COMMIT_SHA:0:8}"
      - sed -i "s/__DEPLOY_TAG__/$DEPLOY_TAG/" ./helm_values/values.nprd.yaml

  - name: "Helm: Linting NPRD Values"
    image: harbor.casperinc.net/docker-hub/pelotech/drone-helm3
    settings:
      mode: lint
      debug: true
      chart: ./helm
      values_files: 
        - ./helm_values/values.nprd.yaml
      lint_strictly: true

  - name: "Helm: Update NPRD Deployment"
    image: harbor.casperinc.net/docker-hub/pelotech/drone-helm3
    settings:
      mode: upgrade
      debug: true
      force_upgrade: true
      cleanup_failed_upgrade: true
      chart: ./helm
      release: ght-nprd
      namespace: nprd
      wait_for_upgrade: true
      values_files: 
        - ./helm_values/values.nprd.yaml
      kube_api_server:
        from_secret: kube_api_server
      kube_certificate:
        from_secret: kube_certificate
      kube_token:
        from_secret: kube_token
      kube_service_account:
        from_secret: kube_service_account

image_pull_secrets:
  - hargor-regcred-docker-json

---
kind: secret
name: registry-username
get:
  path: harbor-registry
  name: USERNAME
---
kind: secret
name: registry-password
get:
  path: harbor-registry
  name: PASSWORD
---
kind: secret
name: creds-nprd-db-user
get:
  path: ght-nprd
  name: DB_USER
---
kind: secret
name: creds-nprd-db-password
get:
  path: ght-nprd
  name: DB_PASSWORD
---
kind: secret
name: creds-nprd-db-database
get:
  path: ght-nprd
  name: DB_DATABASE
---
kind: secret
name: creds-nprd-db-server
get:
  path: ght-nprd
  name: DB_SERVER
---
kind: secret
name: creds-nprd-db-port
get:
  path: ght-nprd
  name: DB_PORT
---
kind: secret
name: kube_api_server
get:
  path: k8s_auth
  name: API_SERVER
---
kind: secret
name: kube_service_account
get:
  path: k8s_auth
  name: USER
---
kind: secret
name: kube_token
get:
  path: k8s_auth
  name: TOKEN
---
kind: secret
name: kube_certificate
get:
  path: k8s_auth
  name: CERT_BASE64