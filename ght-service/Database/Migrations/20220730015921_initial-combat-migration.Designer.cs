// <auto-generated />
using System;
using System.Collections.Generic;
using GloomhavenTracker.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GloomhavenTracker.Database.Migrations
{
    [DbContext(typeof(GloomhavenContext))]
    [Migration("20220730015921_initial-combat-migration")]
    partial class initialcombatmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Action")
                        .HasColumnType("integer");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTimeUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NewValues")
                        .HasColumnType("text");

                    b.Property<string>("OldValues")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("text");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CampaignDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("CampaignCampaign");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CampaignItemDAO", b =>
                {
                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("InUse")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CampaignId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("CampaignCampaignItem");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CharacterDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CharacterContentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PerkPoints")
                        .HasColumnType("integer");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CharacterContentId");

                    b.ToTable("CampaignCharacter");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CharacterItemDAO", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CharacterId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("CampaignCharacterItem");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CharacterPerkDAO", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PerkId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CharacterId", "PerkId");

                    b.HasIndex("PerkId");

                    b.ToTable("CampaignCharacterAppliedPerk");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.ScenarioDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ScenarioContentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ScenarioContentId");

                    b.ToTable("CampaignScenario");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ActiveEffectDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EffectId")
                        .HasColumnType("uuid");

                    b.Property<int>("RoundsRemaining")
                        .HasColumnType("integer");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EffectId");

                    b.ToTable("CombatActiveEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.AttackModifierDeckCardDAO", b =>
                {
                    b.Property<Guid>("DeckId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttackModifierId")
                        .HasColumnType("uuid");

                    b.Property<int>("position")
                        .HasColumnType("integer");

                    b.HasKey("DeckId", "AttackModifierId");

                    b.HasIndex("AttackModifierId");

                    b.HasIndex("DeckId", "position")
                        .IsUnique();

                    b.ToTable("CombatAttackModifierDeckCards");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.AttackModifierDeckDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentPosition")
                        .HasColumnType("integer");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("CombatAttackModifierDecks");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.CharacterActiveEffectDAO", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActiveEffectId")
                        .HasColumnType("uuid");

                    b.HasKey("CharacterId", "ActiveEffectId");

                    b.HasIndex("ActiveEffectId", "CharacterId")
                        .IsUnique();

                    b.ToTable("CombatCharacterActiveEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.CharacterDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampaignCharacterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CombatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CampaignCharacterId");

                    b.HasIndex("CombatId");

                    b.ToTable("CombatCharacters");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.CombatDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ScenarioId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("CombatCombat");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ElementDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CombatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Strength")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CombatId", "Element")
                        .IsUnique();

                    b.ToTable("CombatElements");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.MonsterActiveEffectDAO", b =>
                {
                    b.Property<Guid>("MonsterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActiveEffectId")
                        .HasColumnType("uuid");

                    b.HasKey("MonsterId", "ActiveEffectId");

                    b.HasIndex("ActiveEffectId", "MonsterId")
                        .IsUnique();

                    b.ToTable("CombatMonsterActiveEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.MonsterDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CombatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContentMonsterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("InstanceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsElite")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("MonsterContentId")
                        .HasColumnType("uuid");

                    b.Property<int>("MonsterNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CombatId");

                    b.HasIndex("MonsterContentId");

                    b.ToTable("CombatMonsters");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ObjectiveActiveEffectDAO", b =>
                {
                    b.Property<Guid>("ObjectiveId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActiveEffectId")
                        .HasColumnType("uuid");

                    b.HasKey("ObjectiveId", "ActiveEffectId");

                    b.HasIndex("ActiveEffectId", "ObjectiveId")
                        .IsUnique();

                    b.ToTable("CombatObjectiveActiveEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ObjectiveDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CombatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContentObjectiveId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ObjectiveId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CombatId");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("CombatObjectives");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.AttackModifierDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlessing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCurse")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("TriggerShuffle")
                        .HasColumnType("boolean");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GameId", "ContentCode")
                        .IsUnique();

                    b.ToTable("ContentAttackModifier");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.AttackModifierEffectDAO", b =>
                {
                    b.Property<Guid>("EffectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttackModifierId")
                        .HasColumnType("uuid");

                    b.HasKey("EffectId", "AttackModifierId");

                    b.HasIndex("AttackModifierId");

                    b.ToTable("ContentAttackModifierEffect");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.CharacterBaseStatsDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId", "Level");

                    b.ToTable("ContentCharacterBaseStat");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.CharacterDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GameId", "ContentCode");

                    b.ToTable("ContentCharacter");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.EffectDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Element")
                        .HasColumnType("text");

                    b.Property<int?>("Range")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Type", "Value", "Duration")
                        .IsUnique();

                    b.ToTable("ContentEffect");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.GameBaseAttackModifierDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttackModifierId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AttackModifierId");

                    b.HasIndex("GameId");

                    b.ToTable("ContentGameBaseAttackModifiers");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.GameDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("ContentCode");

                    b.ToTable("ContentGame");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ItemDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("ContentItem");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterAttackEffectDAO", b =>
                {
                    b.Property<Guid>("EffectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MonsterStatSetId")
                        .HasColumnType("uuid");

                    b.HasKey("EffectId", "MonsterStatSetId");

                    b.HasIndex("MonsterStatSetId");

                    b.ToTable("ContentMonsterAttackEffect");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterBaseStatImmunityDAO", b =>
                {
                    b.Property<Guid>("MonsterStatSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Effect")
                        .HasColumnType("text");

                    b.HasKey("MonsterStatSetId", "Effect");

                    b.ToTable("ContentMonsterBaseStatImmunity");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GameId", "ContentCode")
                        .IsUnique();

                    b.ToTable("ContentMonster");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterDeathEffectDAO", b =>
                {
                    b.Property<Guid>("EffectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MonsterStatSetId")
                        .HasColumnType("uuid");

                    b.HasKey("EffectId", "MonsterStatSetId");

                    b.HasIndex("MonsterStatSetId");

                    b.ToTable("ContentMonsterDeathEffect");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterDefenseEffectDAO", b =>
                {
                    b.Property<Guid>("EffectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MonsterStatSetId")
                        .HasColumnType("uuid");

                    b.HasKey("EffectId", "MonsterStatSetId");

                    b.HasIndex("MonsterStatSetId");

                    b.ToTable("ContentMonsterDefenseEffect");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterStatSetDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Attack")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsElite")
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<bool>("MeleeAttackable")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MonsterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Movement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("RangeAttackable")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("ContentMonsterStatSet");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ObjectiveDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("MeleeAttackable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("RangeAttackable")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("GameId", "ContentCode");

                    b.ToTable("ContentObjective");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.PerkActionDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AttackModifierId")
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<Guid>("PerkId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AttackModifierId");

                    b.HasIndex("PerkId");

                    b.ToTable("ContentPerkAction");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.PerkDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("GameId");

                    b.ToTable("ContentPerk");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ScenarioDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CityMapLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("ScenarioBookPages")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("ScenarioNumber")
                        .HasColumnType("integer");

                    b.Property<List<int>>("SupplementalBookPages")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.HasIndex("GameId", "ContentCode");

                    b.HasIndex("GameId", "ScenarioNumber");

                    b.ToTable("ContentScenario");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ScenarioMonsterDAO", b =>
                {
                    b.Property<Guid>("ScenarioId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MonsterId")
                        .HasColumnType("uuid");

                    b.HasKey("ScenarioId", "MonsterId");

                    b.HasIndex("MonsterId");

                    b.ToTable("ContentScenarioMonster");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ScenarioObjectiveDAO", b =>
                {
                    b.Property<Guid>("ScenarioId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ObjectiveId")
                        .HasColumnType("uuid");

                    b.HasKey("ScenarioId", "ObjectiveId");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("ContentScenarioObjective");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.UserCampaignDAO", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "CampaignId");

                    b.HasIndex("CampaignId");

                    b.ToTable("UserCampaign");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.UserDAO", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CampaignDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CampaignItemDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Campaign.CampaignDAO", "Campaign")
                        .WithMany("Items")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.ItemDAO", "Item")
                        .WithMany("CampaginItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CharacterDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Campaign.CampaignDAO", "Campaign")
                        .WithMany("Party")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.CharacterDAO", "CharacterContent")
                        .WithMany("CampaignCharacters")
                        .HasForeignKey("CharacterContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("CharacterContent");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CharacterItemDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Campaign.CharacterDAO", "Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.ItemDAO", "Item")
                        .WithMany("CharacterItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CharacterPerkDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Campaign.CharacterDAO", "Character")
                        .WithMany("AppliedPerks")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.PerkDAO", "Perk")
                        .WithMany("CharacterPerks")
                        .HasForeignKey("PerkId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Perk");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.ScenarioDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Campaign.CampaignDAO", "Campaign")
                        .WithMany("Scenarios")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.ScenarioDAO", "ScenarioContent")
                        .WithMany("ScenarioCampaigns")
                        .HasForeignKey("ScenarioContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("ScenarioContent");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ActiveEffectDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.EffectDAO", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Effect");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.AttackModifierDeckCardDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.AttackModifierDAO", "AttackModifier")
                        .WithMany()
                        .HasForeignKey("AttackModifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Combat.AttackModifierDeckDAO", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AttackModifier");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.CharacterActiveEffectDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Combat.ActiveEffectDAO", "ActiveEffect")
                        .WithMany("CharacterActiveEffectsDAOs")
                        .HasForeignKey("ActiveEffectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Combat.CharacterDAO", "Character")
                        .WithMany("ActiveEffects")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActiveEffect");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.CharacterDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Campaign.CharacterDAO", "CampaignCharacter")
                        .WithMany()
                        .HasForeignKey("CampaignCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Combat.CombatDAO", "Combat")
                        .WithMany("Characters")
                        .HasForeignKey("CombatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignCharacter");

                    b.Navigation("Combat");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.CombatDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Campaign.CampaignDAO", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.ScenarioDAO", "Scenario")
                        .WithMany()
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ElementDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Combat.CombatDAO", "Combat")
                        .WithMany("Elements")
                        .HasForeignKey("CombatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Combat");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.MonsterActiveEffectDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Combat.ActiveEffectDAO", "ActiveEffect")
                        .WithMany("MonsterActiveEffects")
                        .HasForeignKey("ActiveEffectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Combat.MonsterDAO", "Monster")
                        .WithMany("ActiveEffects")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActiveEffect");

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.MonsterDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Combat.CombatDAO", "Combat")
                        .WithMany("Monsters")
                        .HasForeignKey("CombatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.MonsterDAO", "MonsterContent")
                        .WithMany()
                        .HasForeignKey("MonsterContentId");

                    b.Navigation("Combat");

                    b.Navigation("MonsterContent");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ObjectiveActiveEffectDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Combat.ActiveEffectDAO", "ActiveEffect")
                        .WithMany()
                        .HasForeignKey("ActiveEffectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Combat.ObjectiveDAO", "Objective")
                        .WithMany("ActiveEffects")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActiveEffect");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ObjectiveDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Combat.CombatDAO", "Combat")
                        .WithMany("Objectives")
                        .HasForeignKey("CombatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.ObjectiveDAO", "Objective")
                        .WithMany()
                        .HasForeignKey("ObjectiveId");

                    b.Navigation("Combat");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.AttackModifierDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany("AttackModifiers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.AttackModifierEffectDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.AttackModifierDAO", "AttackModifier")
                        .WithMany("Effects")
                        .HasForeignKey("AttackModifierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.EffectDAO", "Effect")
                        .WithMany("AttackModifierEffects")
                        .HasForeignKey("EffectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AttackModifier");

                    b.Navigation("Effect");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.CharacterBaseStatsDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.CharacterDAO", "Character")
                        .WithMany("BaseStats")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.CharacterDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany("Characters")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.GameBaseAttackModifierDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.AttackModifierDAO", "AttackModifier")
                        .WithMany("GameBaseAttackModifiers")
                        .HasForeignKey("AttackModifierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany("BaseModifierDeck")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AttackModifier");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ItemDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterAttackEffectDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.EffectDAO", "Effect")
                        .WithMany("MonsterAttackEffects")
                        .HasForeignKey("EffectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.MonsterStatSetDAO", "MonsterStatSet")
                        .WithMany("AttackEffects")
                        .HasForeignKey("MonsterStatSetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Effect");

                    b.Navigation("MonsterStatSet");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterBaseStatImmunityDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.MonsterStatSetDAO", "MonsterStatSet")
                        .WithMany("Immunity")
                        .HasForeignKey("MonsterStatSetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MonsterStatSet");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany("Monsters")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterDeathEffectDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.EffectDAO", "Effect")
                        .WithMany("MonsterDeathEffects")
                        .HasForeignKey("EffectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.MonsterStatSetDAO", "MonsterStatSet")
                        .WithMany("DeathEffects")
                        .HasForeignKey("MonsterStatSetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Effect");

                    b.Navigation("MonsterStatSet");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterDefenseEffectDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.EffectDAO", "Effect")
                        .WithMany("MonsterDefenseEffects")
                        .HasForeignKey("EffectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.MonsterStatSetDAO", "MonsterStatSet")
                        .WithMany("DefenseEffects")
                        .HasForeignKey("MonsterStatSetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Effect");

                    b.Navigation("MonsterStatSet");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterStatSetDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.MonsterDAO", "Monster")
                        .WithMany("BaseStats")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ObjectiveDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany("Objectives")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.PerkActionDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.AttackModifierDAO", "AttackModifier")
                        .WithMany("PerkActions")
                        .HasForeignKey("AttackModifierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.PerkDAO", "Perk")
                        .WithMany("Actions")
                        .HasForeignKey("PerkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttackModifier");

                    b.Navigation("Perk");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.PerkDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.CharacterDAO", "Character")
                        .WithMany("BasePerks")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ScenarioDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.GameDAO", "Game")
                        .WithMany("Scenarios")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ScenarioMonsterDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.MonsterDAO", "Monster")
                        .WithMany("ScenarioMonsters")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.ScenarioDAO", "Scenario")
                        .WithMany("Monsters")
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Monster");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ScenarioObjectiveDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Content.ObjectiveDAO", "Objective")
                        .WithMany("ScenarioObjectives")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.Content.ScenarioDAO", "Scenario")
                        .WithMany("Objectives")
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Objective");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.UserCampaignDAO", b =>
                {
                    b.HasOne("GloomhavenTracker.Database.Models.Campaign.CampaignDAO", "Campaign")
                        .WithMany("Managers")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GloomhavenTracker.Database.Models.UserDAO", "User")
                        .WithMany("Campaigns")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CampaignDAO", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Managers");

                    b.Navigation("Party");

                    b.Navigation("Scenarios");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Campaign.CharacterDAO", b =>
                {
                    b.Navigation("AppliedPerks");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ActiveEffectDAO", b =>
                {
                    b.Navigation("CharacterActiveEffectsDAOs");

                    b.Navigation("MonsterActiveEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.AttackModifierDeckDAO", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.CharacterDAO", b =>
                {
                    b.Navigation("ActiveEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.CombatDAO", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Elements");

                    b.Navigation("Monsters");

                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.MonsterDAO", b =>
                {
                    b.Navigation("ActiveEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Combat.ObjectiveDAO", b =>
                {
                    b.Navigation("ActiveEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.AttackModifierDAO", b =>
                {
                    b.Navigation("Effects");

                    b.Navigation("GameBaseAttackModifiers");

                    b.Navigation("PerkActions");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.CharacterDAO", b =>
                {
                    b.Navigation("BasePerks");

                    b.Navigation("BaseStats");

                    b.Navigation("CampaignCharacters");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.EffectDAO", b =>
                {
                    b.Navigation("AttackModifierEffects");

                    b.Navigation("MonsterAttackEffects");

                    b.Navigation("MonsterDeathEffects");

                    b.Navigation("MonsterDefenseEffects");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.GameDAO", b =>
                {
                    b.Navigation("AttackModifiers");

                    b.Navigation("BaseModifierDeck");

                    b.Navigation("Characters");

                    b.Navigation("Monsters");

                    b.Navigation("Objectives");

                    b.Navigation("Scenarios");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ItemDAO", b =>
                {
                    b.Navigation("CampaginItems");

                    b.Navigation("CharacterItems");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterDAO", b =>
                {
                    b.Navigation("BaseStats");

                    b.Navigation("ScenarioMonsters");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.MonsterStatSetDAO", b =>
                {
                    b.Navigation("AttackEffects");

                    b.Navigation("DeathEffects");

                    b.Navigation("DefenseEffects");

                    b.Navigation("Immunity");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ObjectiveDAO", b =>
                {
                    b.Navigation("ScenarioObjectives");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.PerkDAO", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("CharacterPerks");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.Content.ScenarioDAO", b =>
                {
                    b.Navigation("Monsters");

                    b.Navigation("Objectives");

                    b.Navigation("ScenarioCampaigns");
                });

            modelBuilder.Entity("GloomhavenTracker.Database.Models.UserDAO", b =>
                {
                    b.Navigation("Campaigns");
                });
#pragma warning restore 612, 618
        }
    }
}
